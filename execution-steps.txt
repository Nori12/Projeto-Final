Roteiro de instruções PH:

1) >> git clone -b fast-exec https://github.com/Nori12/Projeto-Final && cd Projeto-Final
    OBS: Aprox. 1,64GB
    Se quiser teste rápido em máquina local: git clone https://github.com/Nori12/Projeto-Final && cd Projeto-Final

1.1) Alterar "cpus" e "mem_limit" no arquivo 'docker-compose.yml' de acordo com PC hospedeiro.
    Ex: CPU dual-core -> cpus: 2
        Para execução simples, o programa não utiliza mais do que 400mb de RAM.
            No entanto, pelo desconhecimento do teto de consumo, arbitro mem_limit: 2g.

2) >> docker-compose run --name stock-app-0 app
    Opcional: após programa começar a simular as estratégias, usar ">> docker stats" em
        outro terminal para verificar o uso de cpu e memória

3) >> docker exec -it stock-db-0 pg_dump -U postgres -h localhost --create -E utf8 -d StockMarket > db_dump_strategy.sql
    Cria dump do banco no diretório atual. Enviar para Pedro.

4) >> docker cp stock-app-0:/home/app/logs/app.log app.log
    Copia arquivo em log para diretório atual. Enviar para Pedro.

5) >> docker-compose down --rmi 'all' -v
    Deleta containers, networks, volumes, ... criados pelo 'docker-compose up/run'


Observações gerais:

- Porta 5430 do host conectada ao banco enquanto container 'stock-db-0' estiver on.
